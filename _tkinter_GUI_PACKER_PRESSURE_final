'''
This program is applicable to calculate inflation pressure in PSI for various packer types.
All of the packer manufacturers would provive two important facts that are essential to calculate
required inflation pressure for a 1)withdrawal test (pump out) or a 1)injection test (pump in).
You need to know:
a) unconfined pressure rating
b) confined pressure rating
'''

#Programmer: Ankan Basu, PG, CPG, Hydrogeologist/Geochemist
#website: www.coalgeology.com
#version: v1_gui_3.13.2014

from tkinter import *

class myApp:


    def __init__(self, master):
        #create a container to hold my GUI application. Grid it.
        self.container=Frame(master)
        self.container.grid()

        #Create 3 labels Dp, Dw and Sp
        #Create header Label
        self.label1=Label(self.container, text="Welcome to the Packer Inflation pressure calculator for hydrologic tests using water", fg='red', bg='yellow')
        self.label1.grid(row=0, columnspan=3)
        #Create label for Dp
        self.label2=Label(self.container, text="Depth to top of packer in feet")
        self.label2.grid(row=1, column=0,sticky=W)
        #create label for Dw
        self.label3=Label(self.container, text="Depth to static water level in well in feet")
        self.label3.grid(row=2, column=0,sticky=W)
        #Create Label for Sp
        self.label4=Label(self.container, text="Unconfided packer pressure rating for the well in PSI")
        self.label4.grid(row=3, column=0,sticky=W)
        #Create Label for Cp
        self.label5=Label(self.container, text="Confided packer pressure rating for the well in PSI")
        self.label5.grid(row=4, column=0,sticky=W)

        #Create Label for Notes
        self.label6=Label(self.container, text="Note: Unconfined and confined packer pressure ratings vary based on packer type and borehole diameter", fg='red')
        self.label6.grid(row=9, sticky=W, columnspan=3)

        #Create Label for Example values
        self.label7=Label(self.container, text="Example, Type A packer has about 150 PSI unconfined PSI and 575 PSI confined pressure ratings for 2-3 inch boreholes", fg='red')
        self.label7.grid(row=10, sticky=W, columnspan=3)         

        #Think and declare variables that needs screen input
        self.Dp=StringVar()
        self.Dw=StringVar()
        self.Sp=StringVar()
        self.Cp=StringVar()
        
        self.DP=Entry(self.container, textvariable=self.Dp)
        self.DP.grid(row=1, column=1,sticky=W)
        self.DW=Entry(self.container, textvariable=self.Dw)
        self.DW.grid(row=2, column=1,sticky=W)
        self.SP=Entry(self.container, textvariable=self.Sp)
        self.SP.grid(row=3, column=1,sticky=W)
        self.CP=Entry(self.container, textvariable=self.Cp)
        self.CP.grid(row=4, column=1,sticky=W)
        #Create a button that would unilize numbers from the input entries and calculate withdrawal pressure in psi
        self.mybutton1=Button(self.container, text='Calculate Withdraw Pressure', width=30)
        self.mybutton1.grid(row=5, column=0,sticky=W)
        self.mybutton1.bind("<Button-1>", self.withdrawPressure)

        #Create a button that would unilize numbers from the input entries and calculate injection pressure in psi
        self.mybutton2=Button(self.container, text='Calculate Injection Pressure',width=30)
        self.mybutton2.grid(row=6, column=0, sticky=W)
        self.mybutton2.bind("<Button-1>", self.injectionPressureWater)


      


    def withdrawPressure(self,event):
        try:
            self.myDp=float(self.Dp.get())
            self.myDw=float(self.Dw.get())
            self.mySp=float(self.Sp.get())
            self.myCp=float(self.Cp.get())
            self.m=((self.myDp-self.myDw)*.43)+self.mySp+((self.myDp-self.myDw)*.43*.2)
            self.labelresult1=Label(self.container, text="Withdrawal pressure in PSI is %.2f" % self.m)
            self.labelresult1.grid(row=5, column=1,sticky=W)
        except ValueError:
            pass
        


    def injectionPressureWater(self,event):
        try:
            self.myDp=float(self.Dp.get())
            self.myDw=float(self.Dw.get())
            self.mySp=float(self.Sp.get())
            self.Pp=self.myDp*.43
            self.myCp=float(self.Cp.get())
            #self.Cp=575 #PSI for confined pressure rating for type A packers
            
                   
            self.m=((self.myDp*.43)+self.mySp+self.Pp)*1.1
            self.n=(self.myCp+(self.myDp-self.myDw)*.43)

            #print(self.myCp,self.myDp,self.myDw,self.m, self.n)
            
            if (self.m>self.n):
                self.labelresult2=Label(self.container, text="Injection pressure in PSI is %.2f" % self.n)
                self.labelresult2.grid(row=6, column=1, sticky=W)
                
            else:
                self.labelresult3=Label(self.container, text="Injection pressure in PSI is %.2f" % self.m)
                self.labelresult3.grid(row=6, column=1, sticky=W)
        except ValueError:
            pass
        


            
myGUI=Tk()
myGUI.geometry('630x200+500+200')
myGUI.title('Packer Inflation pressure calculator')
myapp=myApp(myGUI)

myGUI.mainloop()

